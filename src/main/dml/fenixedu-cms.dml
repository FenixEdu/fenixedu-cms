package org.fenixedu.cms.domain;

valueType org.fenixedu.cms.domain.SiteAnalytics as SiteAnalytics {
    externalizeWith {
        JsonElement externalize();
    }
    internalizeWith internalize();
}

valueType org.fenixedu.cms.domain.PostMetadata as PostMetadata {
    externalizeWith {
        String externalize();
    }
    internalizeWith internalize();
}

valueType org.fenixedu.cms.domain.CMSThemeFiles as CMSThemeFiles {
    externalizeWith {
        bytearray externalize();
    }
}

valueType org.fenixedu.cms.domain.component.CMSComponent as CMSComponent {
    externalizeWith {
        String externalize();
    }
    internalizeWith internalize();
}

valueType org.fenixedu.cms.domain.PermissionsArray as PermissionsArray {
    externalizeWith {
        String externalize();
    }
    internalizeWith internalize();
}

class Site{
  String alternativeSite;
  String style;
  DateTime creationDate;
  LocalizedString name;
  LocalizedString description;
  String slug;
  boolean published;
  boolean embedded;
  public String analyticsCode;
  public String analyticsAccountId;
  public String themeType;
  public SiteAnalytics analytics;
}

public class PersistentSiteViewersGroup extends .org.fenixedu.bennu.core.domain.groups.PersistentGroup;

public class CMSFolder {
    public NashornStrategy<CMSFolder.FolderResolver> resolver;
}

class Page{
  DateTime creationDate;
  DateTime modificationDate;
  LocalizedString name;
  String slug;
  String templateType;
  boolean published;
}

class Category{
  DateTime creationDate;
  LocalizedString name;
  String slug;
  boolean privileged;
}

class Menu{
  DateTime creationDate;
  LocalizedString name;
  String slug;
  boolean topMenu;
  boolean privileged;
  Integer order;
}

class MenuItem{
  DateTime creationDate;
  Integer position;
  LocalizedString name;
  String url;
  boolean folder;
}

class Post{
  LocalizedString name;
  String slug;
  DateTime creationDate;
  DateTime modificationDate;
  boolean active;
  DateTime publicationBegin;
  DateTime publicationEnd;
  LocalizedString location;
  PostMetadata metadata;
}

class PostContentRevision{
  LocalizedString excerpt;
  LocalizedString body;
  DateTime revisionDate;
}

relation PostContentRevisions{
  public PostContentRevision playsRole previous{
    multiplicity 0..1;
  }
  public PostContentRevision playsRole next{
    multiplicity 0..1;
  }
}

relation PostRevisionRevision{
  public PostContentRevision playsRole revisions{
    multiplicity 0..*;
  }
  public Post playsRole post{
    multiplicity 1..1;
  }
}

relation NewestRevision{
  public PostContentRevision playsRole latestRevision{
    multiplicity 0..1;
  }
  protected Post playsRole isLastestRevision{
    multiplicity 0..1;
  }
}

relation PostContentRevisionOwer{
  public .org.fenixedu.bennu.core.domain.User playsRole createdBy{
    multiplicity 1..1;
  }

  public PostContentRevision playsRole revisions{
    multiplicity 0..*;
  }
}

public class component.Component{
  DateTime creationDate;
  String type;
}

class CMSTheme{
  DateTime creationDate;
  String name;
  String description;
  String type;
  CMSThemeFiles files;
  String previewImagePath;
}

class CMSTemplate{
  String filePath;
  String name;
  String description;
  String type;
}

public class component.StrategyBasedComponent extends component.Component {
    protected CMSComponent component;
}
class component.ListCategoryPosts extends component.Component{}
class component.StaticPost extends component.Component{}

class PostFile{
    boolean isEmbedded;
    Integer index;
}

relation SiteCMSTheme{
  public CMSTheme playsRole theme{
    multiplicity 0..1;
  }
  public Site playsRole sites{
    multiplicity 0..*;
  }
}

relation DefaultPage{
  public CMSTemplate playsRole defaultTemplate{
    multiplicity 0..1;
  }

  protected CMSTheme playsRole defaultTemplateTheme{
    multiplicity 0..1;
  }
}

relation SiteViewersGroup {
    protected Site playsRole site {
        multiplicity 1..1;
    }
    protected PersistentSiteViewersGroup playsRole viewerGroup {
        multiplicity 1..1;
    }
}

class CmsSettings {}

relation CmsSettingsHasRoot {
  CmsSettings playsRole cmsSettings;
  protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
}

relation ThemesHaveManagers {
    protected CmsSettings playsRole;
    .org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole themesManagers {
        multiplicity 1..1;
    }
}

relation RolesHaveManagers {
    protected CmsSettings playsRole;
    .org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole rolesManagers {
        multiplicity 1..1;
    }
}

relation FoldersHaveManagers {
    protected CmsSettings playsRole;
    .org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole foldersManagers {
        multiplicity 1..1;
    }
}

relation SettingsHaveManagers {
    protected CmsSettings playsRole;
    .org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole settingsManagers {
        multiplicity 1..1;
    }
}

relation ComponentUser{
  .org.fenixedu.bennu.core.domain.User playsRole createdBy{
    multiplicity 1..1;
  }

  protected component.Component playsRole componentsCreated{
    multiplicity *;
  }
}

relation ComponentRoot {
    public component.StrategyBasedComponent playsRole cmsComponents {
        multiplicity *;
    }
    protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
}

relation PrimaryCMSThemeBennu{
  protected .org.fenixedu.bennu.core.domain.Bennu playsRole primaryBennu{
    multiplicity 0..1;
  }
  CMSTheme playsRole defaultCMSTheme{
    multiplicity 0..1;
  }
}

relation PrimarySite{
  protected .org.fenixedu.bennu.core.domain.Bennu playsRole primaryBennu{
    multiplicity 0..1;
  }
  Site playsRole defaultSite{
    multiplicity 0..1;
  }
}

relation CMSThemeBennu{
  .org.fenixedu.bennu.core.domain.Bennu playsRole bennu{
    multiplicity 1..1;
  }
  CMSTheme playsRole CMSThemes{
    multiplicity *;
  }
}

relation CMSTemplateCMSTheme{
  CMSTheme playsRole theme{
    multiplicity 1..1;
  }
  CMSTemplate playsRole templates{
    multiplicity *;
  }
}

relation ThemePreview{
  .org.fenixedu.bennu.io.domain.GroupBasedFile playsRole previewImage{
    multiplicity 0..1;
  }

  CMSTheme playsRole themePreview{
    multiplicity 0..1;
  }
}

relation CMSThemeUser{
  .org.fenixedu.bennu.core.domain.User playsRole createdBy{
    multiplicity 0..1;
  }
  protected CMSTheme playsRole themesCreated{
    multiplicity *;
  }
}

relation CMSThemeCMSTheme{
  CMSTheme playsRole extended{
    multiplicity 0..1;
  }

  CMSTheme playsRole children{
    multiplicity *;
  }
}

relation FileHasPostFiles{
  Site playsRole site {
    multiplicity 1..1;
  }

  PostFile playsRole files{
    multiplicity 0..*;
  }
}

relation PostHasPostFiles{
  Post playsRole post{
    multiplicity 1..1;
  }

  PostFile playsRole files{
    multiplicity 0..*;
  }
}

relation FilePostFile{
  .org.fenixedu.bennu.io.domain.GroupBasedFile playsRole files{
    multiplicity 1..1;
  }

  PostFile playsRole postFile{
    multiplicity 0..1;
  }
}

relation CMSTemplatePage{
  CMSTemplate playsRole template{
    multiplicity 0..1;
  }

  Page playsRole pages{
    multiplicity *;
  }
}

relation ListCategoryPostsCategory{
  protected component.ListCategoryPosts playsRole components{
    multiplicity *;
  }
  Category playsRole category{
    multiplicity 0..1;
  }
}

relation ComponentPage {
    component.Component playsRole components{
    multiplicity *;
  }
  Page playsRole installedPage {
      multiplicity *;
  }
}

relation StaticPostPost{
  component.StaticPost playsRole component{
    multiplicity *;
  }
  Post playsRole post{
    multiplicity 1..1;
  }
}

relation CategorySite{
    protected Site playsRole site;
    Category playsRole categories {
        multiplicity *;
    }
}

relation MenuSite{
    protected Site playsRole site;
    Menu playsRole menus {
        multiplicity *;
    }
}

relation MenuMenuItem{
    protected Menu playsRole menu;
    MenuItem playsRole items {
        multiplicity *;
    }
}

relation MenuTopMenuItem{
    Menu playsRole top;
    MenuItem playsRole toplevelItems {
        multiplicity *;
    }
}

relation MenuItemMenuItem{
    MenuItem playsRole parent;
    MenuItem playsRole children {
        multiplicity *;
    }
}

relation PageMenuItem{
    Page playsRole page;
    MenuItem playsRole menuItems {
        multiplicity *;
    }
}

relation SitePost{
    protected Site playsRole site;
    Post playsRole post {
        multiplicity *;
    }
}

relation SitePage {
    protected Site playsRole site;
    Page playsRole pages {
        multiplicity *;
    }
}

relation SiteInitialPage {
    Site playsRole;
    Page playsRole initialPage;
}

relation CategoryPost{
  Category playsRole categories {
    multiplicity *;
  }
  Post playsRole posts{
    multiplicity *;
  }
}

relation BennuSite{
  .org.fenixedu.bennu.core.domain.Bennu playsRole bennu{
    multiplicity 1..1;
  }
  Site playsRole sites{
    multiplicity *;
  }
}

relation FolderMenuFunctionality {
    protected .org.fenixedu.bennu.portal.domain.MenuFunctionality playsRole functionality {
        multiplicity 1..1;
    }
    public CMSFolder playsRole cmsFolder;
}

relation FolderHasSites {
    public CMSFolder playsRole folder;
    public Site playsRole site {
        multiplicity *;
    }
}

relation FolderRoot {
    protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
    public CMSFolder playsRole cmsFolder {
        multiplicity *;
    }
}

relation SiteMenuFunctionality{
  .org.fenixedu.bennu.portal.domain.MenuFunctionality playsRole functionality{
    multiplicity 0..1;
  }
  Site playsRole sites{
    multiplicity 0..1;
  }
}

relation SiteUser{
  .org.fenixedu.bennu.core.domain.User playsRole createdBy{
    multiplicity 1..1;
  }
  Site playsRole sitesCreated{
    multiplicity *;
  }
}

relation PageUser{
  .org.fenixedu.bennu.core.domain.User playsRole createdBy{
    multiplicity 1..1;
  }
  protected Page playsRole pagesCreated{
    multiplicity *;
  }
}

relation CategoryUser{
  .org.fenixedu.bennu.core.domain.User playsRole createdBy{
    multiplicity 1..1;
  }
  protected Category playsRole categoriesCreated{
    multiplicity *;
  }
}

relation PostUser{
  .org.fenixedu.bennu.core.domain.User playsRole createdBy{
    multiplicity 1..1;
  }
  protected Post playsRole postsCreated{
    multiplicity *;
  }
}

relation MenuUser{
  .org.fenixedu.bennu.core.domain.User playsRole createdBy{
    multiplicity 1..1;
  }
  protected Menu playsRole menusCreated{
    multiplicity *;
  }
}

relation MenuItemUser{
  .org.fenixedu.bennu.core.domain.User playsRole createdBy{
    multiplicity 1..1;
  }
  protected MenuItem playsRole menuItemsCreated{
    multiplicity *;
  }
}

/**
 * Access Control Lists
 *
 */

relation SiteViewGroup {
    protected Site playsRole siteViewGroup {
        multiplicity *;
    }

    protected .org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole viewGroup {
        multiplicity 1..1;
    }
}

relation PageViewGroup {
    protected Page playsRole pageViewGroup {
        multiplicity *;
    }

    protected .org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole viewGroup {
        multiplicity 1..1;
    }
}

relation PostViewGroup {
    protected Post playsRole postViewGroup {
        multiplicity *;
    }

    protected .org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole viewGroup {
        multiplicity 1..1;
    }
}

/**
 * Site Activity Stream
 */

class SiteActivity{
  DateTime eventDate;
  JsonElement content;
}

relation ActivitySite{
  Site playsRole site{
    multiplicity 1..1;
  }

  SiteActivity playsRole activityLines{
    multiplicity 0..*;
  }
}

relation LastActivitySite{
  protected Site playsRole lastActivityLineSite{
    multiplicity 0..1;
  }

  SiteActivity playsRole lastActivityLine{
    multiplicity 0..1;
  }
}

relation PreviousActivity{
  SiteActivity playsRole previous{
    multiplicity 0..1;
  }

  SiteActivity playsRole next{
    multiplicity 0..1;
  }
}

/* Permissions
 * ################################
 */

class Role {
  LocalizedString name;
}

class RoleTemplate {
  LocalizedString description;
  PermissionsArray permissions;
}

relation RoleHasTemplate {
  Role playsRole roles {
    multiplicity 0..*;
  }
  RoleTemplate playsRole roleTemplate{
    multiplicity 1..1;
  }
}

relation SiteHasRoles {
  Role playsRole roles {
    multiplicity 0..*;
  }
  Site playsRole site {
    multiplicity 1..1;
  }
}

relation RoleTemplateHasRoot {
  .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
    multiplicity 1..1;
  }
  RoleTemplate playsRole roleTemplates {
    multiplicity 0..*;
  }
}

relation RoleHasUserGroup {
  Role playsRole role {
    multiplicity 0..*;
  }
  .org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole group {
    multiplicity 1..1;
  }
}
